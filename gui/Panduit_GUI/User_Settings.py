import Login
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.wait import WebDriverWait
import time
import sys
import datetime
import os
import getpass
import File_Creation
def user_settings_addition(ip):
                driver=Login.login(ip)
                #=File_Creation.file_create()
                print("##################USER SETTINGS###########")
                #.write("\n##################USER SETTINGS###########")
                print("VERYFYING USER SETTINGS")
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'User Accounts')]").click()
                print("GETTING PRE-DEFINED USERS")
                time.sleep(1)
                for i in range(1):
                   a=driver.find_elements_by_tag_name("td")
                   print(a[i].text)
                print("ADDING NEW USER TO THE SERVER")
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Actions')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Add User')]").click()
                time.sleep(1)
                un=driver.find_element_by_name("username")
                un.clear()
                un.send_keys("TEST")
                time.sleep(1)
                un=driver.find_element_by_name("password")
                un.clear()
                un.send_keys("123456789")
                un=driver.find_element_by_name("cpassword")
                un.clear()
                un.send_keys("123456789")
                a=driver.find_elements_by_tag_name("label")
                a[4].click()
                driver.find_element_by_xpath(".//*[contains(text(),'Add User')]").click()
                time.sleep(3)
                if(str(driver.find_element_by_tag_name("p").text)=="User add failed, Please try again later!!"   ):
                        print("ERROR USER NOT CREATED..EXITING FROM THE SCRIPT\n PLEASE DELETE ANY OLD USER AND TRY AGAIN")
                        #.write("\nERROR USER NOT CREATED..EXITING FROM THE SCRIPT\n PLEASE DELETE ANY OLD USER AND TRY AGAIN")
                        #.close()
                        sys.exit()
                else:
                        driver.find_element_by_xpath(".//*[contains(text(),'OK')]").click()
                        print("\nLOGGING OUT WITH THE CURRENT USER TO VERIFY NEW USER")
                        time.sleep(5)
                        driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                        time.sleep(1)
                        driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                        time.sleep(3)
                        Login.login(ip)
                        a=driver.find_elements_by_tag_name("span")
                        if(str(a[1].text)=="Please change default Password for more Security Purpose"):
                                print("USER HAS SUCCSEFULLY CREATED AND NEED TO CHANGE THE DEFAULT PASSWORD")
                                #.write("\nUSER HAS SUCCSEFULLY CREATED AND NEED TO CHANGE THE DEFAULT PASSWORD")
                                time.sleep(3)
                                pas=driver.find_element_by_name("c_password")
                                pas.send_keys("123456789")
                                pas=driver.find_element_by_name("n_password")
                                pas.send_keys("1234567!")
                                pas=driver.find_element_by_name("cn_password")
                                pas.send_keys("1234567!")
                                time.sleep(2)
                                driver.find_element_by_xpath(".//*[contains(text(), 'Change Password')]").click()
                        else:
                                print("ERROR!!!!THE USER CREATION WAS NOT SUCCESFULL")
                                #.write("\nERROR!!!!THE USER CREATION WAS NOT SUCCESFULL")
                        #.close()
                        return driver
def user_settings_verify(ip):
                driver=Login.login(ip)
                #=File_Creation.file_create()
                ################VERIFYING ROLE OF THE USER#######
                print("################VERIFYING ROLE OF THE USER#######")
                #.write("\n################VERIFYING ROLE OF THE USER#######")
                print("CHECKING THE PRIVILAGE OF THE USER")
                #.write("\nCHECKING THE PRIVILAGE OF THE USER")
                time.sleep(3)
                try:
                      a=driver.find_elements_by_tag_name("svg")
                      a[4].click()
                      print("THE USER HAS ADMINISTRATOR PRIVILAGE")
                      #.write("\nTHE USER HAS ADMINISTRATOR PRIVILAGE")
                except:
                      print("THE ROLE OF THE USER IS LIMITED TO **USER**")
                      #.write("\nTHE ROLE OF THE USER IS LIMITED TO **USER**")
                print("CHANGING THE ROLE OF THE USER")
                driver.find_element_by_xpath(".//*[contains(text(), 'TEST')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                time.sleep(3)
                Login.login(ip)
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'User Accounts')]").click()
                time.sleep(1)
                a=driver.find_elements_by_tag_name("svg")
                a[10].click()
                time.sleep(2)
                pas=driver.find_element_by_name("cpassword")
                pas.send_keys("1234567!")
                a=driver.find_elements_by_tag_name("label")
                a[3].click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(),'Save')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(),'OK')]").click()
                print("\nLOGGING OUT WITH THE CURRENT USER TO VERIFY NEW ROLE")
                time.sleep(5)
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                time.sleep(3)
                Login.login(ip)
                print("CHECKING THE PRIVILAGE OF THE USER")
                time.sleep(1)
                try:
                       a=driver.find_elements_by_tag_name("svg")
                       a[4].click()
                       print("THE USER HAS ADMINISTRATOR PRIVILAGE.ROLE CHANGED SUCCESFULLY")
                       #.write("\nTHE USER HAS ADMINISTRATOR PRIVILAGE.ROLE CHANGED SUCCESFULLY")
                except:
                      print("THE ROLE OF THE USER IS LIMITED TO **USER**")
                      #.write("\nTHE ROLE OF THE USER IS LIMITED TO **USER**")
                     
                #.close()
                return driver
                
