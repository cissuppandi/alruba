
#########MODULE INPUT########
from selenium import webdriver
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.wait import WebDriverWait
import time
import sys
import datetime
import os
import getpass
timeout=5
loop=input("ENTER THE NUMBER OF ITRETION")
ask=raw_input("Enter the IP address of the PDU")
for i in range(loop):
        print("EXECUTING THE:{} ITERETION".format(i))
        time.sleep(5)
        
        try:
                
                ip="https://"+ask
                output=open("GUI_OUTPUT_RESULT.txt",'a')
                now=datetime.datetime.now()
                output.write("\n****************NEW RESULT STARTS HERE*************************")
                output.write("\n"*4)
                output.write(now.strftime("\nDATE AND TIME:"+" "+"%H:%M:%S---%d/%b/%Y"))
                           
                #########OPENING WEBROWSER WITH WEBDRIVER#######
                print("#########OPENING WEBROWSER WITH WEBDRIVER#######")        
                driver = webdriver.Chrome()
                driver.get(ip)
                time.sleep(1)
                ##############LOGIN THROUGH WEBDRIVER##########
                print("##############LOGIN THROUGH WEBDRIVER##########")
                username=driver.find_element_by_name("username")
                #WebDriverWait(driver, timeout).until(username)
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                #WebDriverWait(driver, timeout).until(password)
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(2)
                try:
                        if(driver.find_element_by_tag_name("p").text=="User is already logged in. Do you really want to continue?"):
                                driver.find_element_by_xpath(".//*[contains(text(), 'OK')]").click()
                                time.sleep(2)
                except:
                        print("LOOGED IN SUCCESFULLY")
                        time.sleep(4)
                

                ############UPLOAD REQUIRED CONFIGURATION##########
                print("############UPLOAD REQUIRED CONFIGURATION##########")
                output.write("############UPLOAD REQUIRED CONFIGURATION##########")
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                part=driver.find_elements_by_tag_name("a")
                part[2].click()
                time.sleep(4)
                driver.find_element_by_xpath(".//*[contains(text(), 'Action')]").click()
                time.sleep(3)
                driver.find_element_by_xpath(".//*[contains(text(), 'Upload Configuration')]").click()
                time.sleep(2)
                cnf=driver.find_elements_by_tag_name("input")
                time.sleep(2)
                cnf[0].send_keys(os.getcwd()+"/conf.ini")
                time.sleep(1)
                up=driver.find_elements_by_tag_name("button")
                time.sleep(2)
                up[1].click()
                print("PLEASE WAIT WHILE THE REQUIRED CONFIGURATION FLASH AND REBOOT THE PDU.IT MAY TAKE 40 sec .\n.PLEASE WAIT....")
                for i in xrange(40,0,-1):
                        sys.stdout.write(str(i)+' ')
                        sys.stdout.flush()
                        #print("\n"*50)        
                        time.sleep(1)
                driver.get(ip)
                time.sleep(1)
                username=driver.find_element_by_name("username")
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(5)

                #######GETTING THE TAB FROM HOME ICON######
                print("#######GETTING THE TAB FROM HOME ICON######")
                output.write("\n#######GETTING THE TAB FROM HOME ICON######")
                tab_select=driver.find_elements_by_tag_name("li")
                for i in range(0,3):
                    tab=tab_select[i]
                    name=tab.text
                    print("CLICKING THE "+" "+name+"TAB")
                    output.write("\n\nCLICKING THE "+" "+name+"TAB")
                    tab.click()
                    time.sleep(2)
                tab_select[0].click()
                time.sleep(2)
                ###########TAB FROM THE PDU TAB######
                print("###########TAB FROM THE PDU TAB######")
                output.write("\n\n\n###########TAB FROM THE PDU TAB######")
                tab_select=driver.find_elements_by_tag_name("li")
                for i in range(3,len(tab_select)):
                    tab=tab_select[i]
                    name=tab.text
                    print("CLICKING THE "+" "+name+"TAB")
                    output.write("\n\nCLICKING THE "+" "+name+"TAB")
                    time.sleep(2)
                    tab.click()

                time.sleep(2)
                tab_select=driver.find_elements_by_tag_name("li")
                for i in range(5,len(tab_select)):
                    time.sleep(2)
                    tab=tab_select[i]
                    name=tab.text
                    print("CLICKING THE "+" "+name+" "+"TAB")
                    output.write("\nCLICKING THE "+" "+name+" "+"TAB")
                    tab.click()
                tab_select[0].click()
                home=driver.find_elements_by_tag_name("svg")
                home[0].click()
                dash=driver.find_elements_by_css_selector("a.grommetux-anchor")
                print("GETIING THE MENU NAME FROM HOME ")
                output.write("\nGETIING THE MENU NAME FROM HOME ")
                for i in range(0,3):
                    a=[]
                    time.sleep(1)
                    a=dash[i].get_attribute("href").split("/")
                    output.write(a[4])
                    print(a[4])
                    
                print("checking all the menu items of home")
                output.write("\nchecking all the menu items of home")
                menu=['DASHBOARD','IDENTIFICATION','CONTROL&MANAGE']
                for i in range(0,3):
                    dash=driver.find_elements_by_css_selector("a.grommetux-anchor")
                    print("Checking the tab"+" "+"**"+menu[i]+"**")
                    output.write("\nChecking the tab"+" "+"**"+menu[i]+"**")
                    a=dash[i]
                    a.click()
                    time.sleep(6)
                    home[0].click()
                    
                ########VERIFYING OUTLET NAME###############
                driver.refresh()
                time.sleep(10)   
                print("########VERIFYING OUTLET NAME###############")
                output.write("\n########VERIFYING OUTLET NAME###############")
                OD=driver.find_elements_by_tag_name("span")
                time.sleep(2)
                OD[14].click()
                time.sleep(3)
                OD=driver.find_elements_by_tag_name("td")
                i=4
                for i in  range(4,len(OD),7):
                                time.sleep(2)
                                OUTLET_NAME=OD[i]                
                                on_delay=OD[i+2]
                                off_delay=OD[i+3]
                                reboot_duration=OD[i+5]
                                output.write("\nOUTLET NAME:{}".format(OUTLET_NAME.text)+"\n"+"On_delay:{}".format(on_delay.text)+"\n"+"Off_delay:{}".format(off_delay.text)+"\n"+"Reboot_duration:{}".format(reboot_duration.text))
                                print("OUTLET NAME:{}".format(OUTLET_NAME.text)+"\n"+"On_delay:{}".format(on_delay.text)+"\n"+"Off_delay:{}".format(off_delay.text)+"\n"+"Reboot_duration:{}".format(reboot_duration.text))
                                
                               
                                
                #####################VERIFYING OUTLET FUNCTIONALITY##########
                print("#####################VERIFYING OUTLET FUNCTIONALITY##########")
                out1=driver.find_elements_by_tag_name("svg")
                output.write("\n#####################VERIFYING OUTLET FUNCTIONALITY##########")
                print("VERIFYING OUTLET ONE BY TURNING IT OFF")
                time.sleep(2)
                out1[11].click()
                off=driver.find_elements_by_tag_name("a")
                time.sleep(2)
                off[1].click()
                yes=driver.find_elements_by_tag_name("button")
                time.sleep(2)
                yes[1].click()
                ###############CHANGING BREAKER NAME#########
                print("###############CHANGING BREAKER NAME#########")
                output.write("\n###############CHANGING BREAKER NAME#########")
                print("CHANGING THE BREAKER NAME")
                output.write("\nCHANGING THE BREAKER NAME")
                time.sleep(7)
                edit=driver.find_elements_by_tag_name("svg")
                edit[10].click()
                time.sleep(1)
                bk=driver.find_elements_by_tag_name("input")
                bk[0].clear()
                time.sleep(1)
                bk[0].send_keys("TEST")
                time.sleep(1)
                bk[1].clear()
                time.sleep(1)
                bk[1].send_keys("TEST-2")
                time.sleep(2)
                save=driver.find_elements_by_tag_name("button")
                save[1].click()
                time.sleep(2)
                save=driver.find_elements_by_tag_name("button")
                save[3].click()
                ##########CHEKING THE BREAKER NAME#########
                print("##########CHEKING THE BREAKER NAME#########")
                output.write("\n##########CHEKING THE BREAKER NAME#########")
                time.sleep(2)
                tab_select=driver.find_elements_by_tag_name("li")
                print("THE CHANGED NAME OF THE BREAKER_1:{}".format(tab_select[1].text)+"\n"+"THE CHANGED NAME OF THE BREAKER_2:{}".format(tab_select[2].text))
                output.write("\nTHE CHANGED NAME OF THE BREAKER_1:{}".format(tab_select[1].text)+"\n"+"THE CHANGED NAME OF THE BREAKER_2:{}".format(tab_select[2].text))
                if(str(tab_select[1].text)=="TEST" and str(tab_select[2].text)=="TEST-2"):
                             print("BOTH THE NAME HAS BEEN CHANGED")
                             output.write("\nBOTH THE NAME HAS BEEN CHANGED")
                else:
                    print("NAME HAS NOT BEEN CHANGED")
                    output.write("\nNAME HAS NOT BEEN CHANGED")
                ############GETTING INFORMATION FROM IDENTIFICATION TAB#####
                print("############GETTING INFORMATION FROM IDENTIFICATION TAB#####")
                output.write("\n############GETTING INFORMATION FROM IDENTIFICATION TAB#####")
                print("GETTING ALL THE INFORMATION FROM THE IDENTIFICATION TAB")
                output.write("\nGETTING ALL THE INFORMATION FROM THE IDENTIFICATION TAB")
                time.sleep(2)
                home=driver.find_elements_by_tag_name("svg")
                home[0].click()
                dash=driver.find_elements_by_css_selector("a.grommetux-anchor")
                time.sleep(1)
                dash[1].click()
                time.sleep(3)
                iden_info=driver.find_elements_by_tag_name("tr")
                for i in range(0,len(iden_info)):
                    time.sleep(1)
                    print(iden_info[i].text+"\n")
                    output.write(iden_info[i].text+"\n")
                    
                #############CHECKING SEARCH FUNCTIONALITY#################
                print("#############CHECKING SEARCH FUNCTIONALITY#################")
                output.write("\n#############CHECKING SEARCH FUNCTIONALITY#################")
                srch=driver.find_element_by_id("search_app")
                srch.click()
                time.sleep(3)
                srch.send_keys("SNMP")
                srch.send_keys(Keys.ENTER)
                check=driver.find_elements_by_tag_name("header")
                b=check[1]
                if((b.text).strip()=="SNMP Management"):
                    print("SEARCH OPERATION COMPLETED SUCCESSFULLY")
                    output.write("\nSEARCH OPERATION COMPLETED SUCCESSFULLY")
                else:
                    print("SOMETHING IS WRONG",b.text)
                    output.write("\nSOMETHING IS WRONG")
                srch.clear()
                time.sleep(3)
                print("SENDING A JUNK STRING")
                output.write("\nSENDING A JUNK STRING")
                srch.send_keys("SN")
                check=driver.find_elements_by_tag_name("header")
                b=check[1]
                print(b.text)
                if((b.text).strip()=="SNMP Management"):
                    print("SEARCH OPERATION COMPLETED SUCCESSFULLY,NO CHANGE IN RESULT")
                    output.write("\nSEARCH OPERATION COMPLETED SUCCESSFULLY,NO CHANGE IN RESULT")
                else:
                    print("SOMETHING IS WRONG",b.text)
                    output.write("\nSOMETHING IS WRONG")
                #########################VERIFYING ALARM##########################
                print("#########################VERIFYING ALARM##########################")
                output.write("\n#########################VERIFYING ALARM##########################")
                print("VERIGYING THE ALARM FUNCTIONALITY")
                output.write("\nVERIGYING THE ALARM FUNCTIONALITY")
                alarm=driver.find_elements_by_tag_name("svg")
                time.sleep(1)
                alarm[1].click()
                AA=driver.find_elements_by_tag_name("a")
                print(str(AA[1].text+"\n"+AA[2].text))
                output.write(str(AA[1].text+"\n"+AA[2].text))
                time.sleep(1)
                AA[1].click()
                alarm=driver.find_elements_by_tag_name("svg")
                time.sleep(1)
                alarm[1].click()
                time.sleep(1)
                AA=driver.find_elements_by_tag_name("a")
                time.sleep(1)
                AA[2].click()
                #output.close()
                ####################EVENT LOG AND DATA LOG#################
                print("####################EVENT LOG AND DATA LOG#################")
                output.write("\n####################EVENT LOG AND DATA LOG#################")
                data_event=driver.find_elements_by_tag_name("svg")
                data_event[3].click()
                time.sleep(1)
                data=driver.find_elements_by_tag_name("a")
                for i in range(1,3):
                    data=driver.find_elements_by_tag_name("a")
                    print("CLICKING ON THE"+" "+data[i].text)
                    output.write("\nCLICKING ON THE"+" "+data[i].text)
                    time.sleep(5)
                    data[i].click()    
                    data_event[3].click()
                time.sleep(20)
                data_event=driver.find_elements_by_tag_name("svg")
                data_event[3].click()
                data=driver.find_elements_by_tag_name("a")
                print("CLICKING ON THE"+" "+data[4].text)
                output.write("\nCLICKING ON THE"+" "+data[4].text)
                data[4].click()
                time.sleep(3)
               
                ######VERIFY THE DATA LOG AND EVENT LOG DOWNLOAD####
                print("######VERIFY THE DATA LOG AND EVENT LOG DOWNLOAD####")
                output.write("######VERIFY THE DATA LOG AND EVENT LOG DOWNLOAD####")
                time.sleep(3)
                os_user=getpass.getuser()
                print("CHECKING THE DOWNLOAD FOLDER FOR THE EVENT LOG")
                time.sleep(1)
                
                if(os.path.isfile("C:\Users/" + str(os_user)+"/Downloads/logs.csv")==True):
                        print("THE EVENT FILE HAS DOWNLOADED SUCCESFULLY")
                        output.write("THE EVENT FILE HAS DOWNLOADED SUCCESFULLY")
                else:
                        print("ERROE!!THE EVENT DOWNLOAD WAS UNSUCCESSFULL")
                        output.write("ERROE!!THE EVENT DOWNLOAD WAS UNSUCCESSFULL")
                time.sleep(1)
                if(os.path.isfile("C:\Users/" + str(os_user)+"/Downloads/logs.csv")==True):
                        print("THE DATALOG FILE HAS DOWNLOADED SUCCESFULLY")
                        output.write("THE DATALOG FILE HAS DOWNLOADED SUCCESFULLY")
                else:
                        print("ERROE!!THE DATALOG DOWNLOAD WAS UNSUCCESSFULL")
                        output.write("ERROE!!THE DATALOG DOWNLOAD WAS UNSUCCESSFULL")
                        
                
                ########VERIFYING THE OTHER SETTINGS############
                print("########VERIFYING THE OTHER SETTINGS############")
                output.write("\n########VERIFYING THE OTHER SETTINGS############")
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()

                for i in range(1,9):
                    part=driver.find_elements_by_tag_name("a")
                    print("CLICKING ON THE"+" "+str(part[i].text))
                    output.write("\nCLICKING ON THE"+" "+str(part[i].text))
                    time.sleep(5)
                    part[i].click()
                    time.sleep(1)
                    se[4].click()
                    
                time.sleep(1)
                part=driver.find_elements_by_tag_name("a")
                part[1].click()
                time.sleep(2)
                en=driver.find_elements_by_tag_name("svg")
                if(str(en[10].get_attribute("aria-label"))=="checkmark"):
                    print("IPv6 Access is Enabled")
                    output.write("\nIPv6 Access is Enabled")
                else:
                    print("IPv6 Access is Disabled")
                    output.write("\nIPv6 Access is Disabled")
                if(str(en[11].get_attribute("aria-label"))=="checkmark"):
                          print("IPv6 DHCP is Enabled")
                          output.write("\nIPv6 DHCP is Enabled")
                else:
                    print("IPv6 DHCP is Disabled")
                    output.write("\nIPv6 DHCP is Disabled")
                if(str(en[13].get_attribute("aria-label"))=="checkmark"):
                          print("RESTapi Access is Enabled")
                          output.write("\nRESTapi Access is Enabled")
                else:
                    print("RESTapi Access  is Disabled")
                    output.write("\nRESTapi Access  is Disabled")
                if(str(en[15].get_attribute("aria-label"))=="checkmark"):
                          print("SSH Access is Enabled")
                          output.write("\nSSH Access is Enabled")
                else:
                    print("SSH Access is Disabled")
                    output.write("\nSSH Access is Disabled")
                if(str(en[16].get_attribute("aria-label"))=="checkmark"):
                          print("FTPs Access is Enabled")
                          output.write("\nFTPs Access is Enabled")
                else:
                    print("FTPs Access is Disabled")
                    output.write("\nFTPs Access is Disabled")
                if(str(en[18].get_attribute("aria-label"))=="checkmark"):
                          print("Network Time Protocol(NTP) is Enabled")
                          output.write("\nNetwork Time Protocol(NTP) is Enabled")
                else:
                    print("Network Time Protocol(NTP) is Disabled")
                    output.write("\nNetwork Time Protocol(NTP) is Disabled")
                if(str(en[21].get_attribute("aria-label"))=="checkmark"):
                          print("Daylight Saving is Enabled")
                          output.write("\nDaylight Saving is Enabled")
                else:
                    print("Daylight Saving is Disabled")
                    output.write("\nDaylight Saving is Disabled")
                  
                ##########Changing option in the Network settings########
                print("##########Changing option in the Network settings########")
                output.write("\n##########Changing option in the Network settings########")
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(1)
                part=driver.find_elements_by_tag_name("a")
                time.sleep(1)
                part[1].click()

                ##########ENABLING REST API FEATURE############
                print("##########ENABLING REST API FEATURE############")
                output.write("\n##########ENABLING REST API FEATURE############")
                print("Enabling WEB/RESTapi Access Configuration")
                output.write("\nEnabling WEB/RESTapi Access Configuration")
                rest=driver.find_elements_by_tag_name("a")
                rest[2].click()
                time.sleep(1)
                en=driver.find_element_by_id("restaccess")
                en.send_keys("Enable")
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Save')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'Do you really want to apply changes now')]"
                ).click()
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Apply')]").click()
                print("WATING FOR 25 SEC TO RESTART ")           
                for i in xrange(26,0,-1):
                                 sys.stdout.write(str(i)+' ')
                                 sys.stdout.flush()
                                 time.sleep(1)
                print("\n\nLOGGiNG AGAIN TO VERIFY")
                output.write("\n\n\nLOGGING AGAIN TO VERIFY")
                driver.get(ip)
                username=driver.find_element_by_name("username")
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(4)           
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(2)
                part=driver.find_elements_by_tag_name("a")
                time.sleep(1)
                part[1].click()
                time.sleep(2)
                en=driver.find_elements_by_tag_name("svg")
                if(str(en[13].get_attribute("aria-label"))=="checkmark"):
                          print("SUCCESS!!!"+"\n"+"RESTapi Access is Enabled")
                          output.write("\nSUCCESS!!!"+"\n"+"RESTapi Access is Enabled")
                else:
                    print("ERROR!!!!"+"\n"+"RESTapi Access  is Disabled")
                    output.write("\nERROR!!!!"+"\n"+"RESTapi Access  is Disabled")
                    

                ##########CHANGING THE SSH/FTP##########
                print("##########CHANGING THE SSH/FTP##########")
                output.write("\n##########CHANGING THE SSH/FTP##########")
                print("ENABLING SSH/FTP Access Configuration")
                output.write("\nENABLING SSH/FTP Access Configuration")
                ssh=driver.find_elements_by_tag_name("a")
                time.sleep(2)
                ssh[3].click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'SSH Access')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'FTPs Access')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Save')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'Do you really want to apply changes now')]"
                ).click()
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Apply')]").click()
                print("WATING FOR 25 SEC TO RESTART ")
                output.write("\nWATING FOR 25 SEC TO RESTART ")
                for i in xrange(26,0,-1):
                                 sys.stdout.write(str(i)+' ')
                                 sys.stdout.flush()
                                 time.sleep(1)
                print("\n\nLOGGING AGAIN TO VERIFY")
                output.write("\n\nLOGGING AGAIN TO VERIFY")
                driver.get(ip)
                username=driver.find_element_by_name("username")
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(4)           
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(2)
                part=driver.find_elements_by_tag_name("a")
                time.sleep(1)
                part[1].click()
                time.sleep(2)
                en=driver.find_elements_by_tag_name("svg")
                if(str(en[15].get_attribute("aria-label"))=="checkmark"):
                          print("SUCCESS!!!"+"\n"+"SSH is Enabled")
                          output.write("\nSUCCESS!!!"+"\n"+"SSH is Enabled")
                else:
                    print("ERROR!!!!"+"\n"+"SSH  is Disabled")
                if(str(en[16].get_attribute("aria-label"))=="checkmark"):
                          print("SUCCESS!!!"+"\n"+"FTP is Enabled")
                          output.write("\nSUCCESS!!!"+"\n"+"FTP is Enabled")
                else:
                    print("ERROR!!!!"+"\n"+"FTP  is Disabled")
                    output.write("\nERROR!!!!"+"\n"+"FTP  is Disabled")
                    
                #######Enabling the DST#################
                print("#######Enabling the DST#################")
                output.write("\n#######Enabling the DST#################")
                print("ENABLING THE DAYLIGHT SAVING TIME")
                output.write("\nENABLING THE DAYLIGHT SAVING TIME")
                dst=driver.find_elements_by_tag_name("a")
                dst[6].click()
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Enable')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Do you really want to apply changes now')]"
                ).click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Apply')]").click()
                print("WATING FOR 25 SEC TO RESTART ")
                output.write("\nWATING FOR 25 SEC TO RESTART ")
                for i in xrange(26,0,-1):
                                 sys.stdout.write(str(i)+' ')
                                 sys.stdout.flush()
                                 time.sleep(1)
                print("\nLOGGING AGAIN TO VERIFY")

                driver.get(ip)
                username=driver.find_element_by_name("username")
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(4)           
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(2)
                part=driver.find_elements_by_tag_name("a")
                time.sleep(1)
                part[1].click()
                time.sleep(2)
                en=driver.find_elements_by_tag_name("svg")
                if(str(en[21].get_attribute("aria-label"))=="checkmark"):
                          print("SUCCESS!!!"+"\n"+"DAYLIGHT SAVING is Enabled")
                          output.write("\nSUCCESS!!!"+"\n"+"DAYLIGHT SAVING is Enabled")
                else:
                    print("ERROR!!!!"+"\n"+"DAYLIGHT SAVING is Disabled")
                    output.write("\nERROR!!!!"+"\n"+"DAYLIGHT SAVING is Disabled")
                    
                ##############SETTINGS DATE AND TIME################
                print("##############SETTINGS DATE AND TIME################")
                output.write("\n##############SETTINGS DATE AND TIME################")
                time.sleep(2)
                part=driver.find_elements_by_tag_name("a")
                part[5].click()
                time.sleep(3)
                print("CHANGING THE DATE")
                date_time=driver.find_element_by_id("date")
                time.sleep(2)
                date_time.clear()
                now=datetime.datetime.now()
                cdt=now.strftime("%Y/%m/%d")
                time.sleep(4)
                date_time.send_keys(cdt)
                time.sleep(1)
                date_time.send_keys(cdt)
                time.sleep(1)
                for i in range(10):
                        date_time.send_keys(Keys.ARROW_LEFT)
                time.sleep(1)    
                for i in range(18):
                   date_time.send_keys(Keys.BACKSPACE)
                print("CHANGING THE TIME")
                date_time=driver.find_element_by_id("time")
                time.sleep(2)
                date_time.clear()
                now=datetime.datetime.now()
                cdt=now.strftime("%H:%M:%S")
                date_time.send_keys(cdt)
                time.sleep(1)
                date_time.send_keys(cdt)
                for i in range(8):
                        date_time.send_keys(Keys.ARROW_LEFT)
                time.sleep(1)    
                for i in range(12):
                        date_time.send_keys(Keys.BACKSPACE)
                time.sleep(3)        
                driver.find_element_by_xpath(".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Do you really want to apply changes now')]"
                ).click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Apply')]").click()
                print("WATING FOR 25 SEC TO RESTART ")           
                for i in xrange(26,0,-1):
                                 sys.stdout.write(str(i)+' ')
                                 sys.stdout.flush()
                                 time.sleep(1)
                print("\nLOGGING AGAIN TO VERIFY")
                driver.get(ip)
                username=driver.find_element_by_name("username")
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(4)           
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(2)
                part=driver.find_elements_by_tag_name("a")
                time.sleep(1)
                part[1].click()
                print("VERIFYING THE DATE AND TIME")
                time.sleep(2)
                dt=driver.find_elements_by_tag_name("td")
                if(str(dt[41]==now.strftime("%Y/%m/%d"))):
                    print("DATE HAS BEEN CHANGED SUCCESFULLY")
                    output.write("\nDATE HAS BEEN CHANGED SUCCESFULLY")
                else:
                   print("ERROR!!!!DATE IS NOT CHANGED")
                   output.write("\nERROR!!!!DATE IS NOT CHANGED")
                time_test=str(dt[43].text).split(":")
                if(int(time_test[1])-int(now.strftime("%M"))==1):
                   print("TIME HAS SUCCESFULLY CHANGED")
                   output.write("\nTIME HAS SUCCESFULLY CHANGED")
                else:
                   print("ERROR!!!!TIME IS NOT CHANGED")
                   output.write("\nERROR!!!!TIME IS NOT CHANGED")


                ######################SYSTEM MANAGEMENT#######################
                print("######################SYSTEM MANAGEMENT#######################")
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(1)
                part=driver.find_elements_by_tag_name("a")
                print("CHECKING THE SYSTEM MANAGEMENT PAGE")
                time.sleep(1)
                part[2].click()
                driver.find_element_by_xpath(".//*[contains(text(), 'System Information')]").click()
                time.sleep(2)
                print("CHANGING THE SYSTEM NAME")
                time.sleep(1)
                sn=driver.find_elements_by_name("system_name")
                sn[0].clear()
                sn[0].send_keys("TEST NAME")
                print("CHAMGING THE CONTACT NAME")
                time.sleep(2)
                sn=driver.find_elements_by_name("contact_name")
                sn[0].clear()
                sn[0].send_keys("TEST NAME")
                print("CHAMGING THE CONTACT EMAIL")
                time.sleep(1)
                sn=driver.find_elements_by_name("contact_email")
                sn[0].clear()
                sn[0].send_keys("AChakraborty@cisww.com")
                print("CHAMGING THE CONTACT NUMBER")
                time.sleep(1)
                sn=driver.find_elements_by_name("contact_phone")
                sn[0].clear()
                sn[0].send_keys("123456789")
                print("CHAMGING THE CONTACT LOCATION")
                time.sleep(1)
                sn=driver.find_elements_by_name("contact_location")
                sn[0].clear()
                sn[0].send_keys("INDIA")
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                print("CHANGING THE RACK LOCATION")
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Rack Location')]").click()
                print("CHANGING THE ROOM NAME")
                time.sleep(1)
                sn=driver.find_elements_by_name("room_name")
                sn[0].clear()
                sn[0].send_keys("TEST ROOM NAME")
                print("CHAMGING THE ROW NAME")
                time.sleep(1)
                sn=driver.find_elements_by_name("row_name")
                sn[0].clear()
                sn[0].send_keys("TEST ROW NAME")
                print("CHANGING THE ROW POSITION")
                time.sleep(1)
                sn=driver.find_elements_by_name("row_position")
                sn[0].clear()
                sn[0].send_keys("TEST POSITION")
                print("CHAMGING THE RACK NAME")
                time.sleep(1)
                sn=driver.find_elements_by_name("rack_name")
                sn[0].clear()
                sn[0].send_keys("TEST RACK")
                print("CHAMGING THE RACK ID")
                time.sleep(1)
                sn=driver.find_elements_by_name("rack_id")
                sn[0].clear()
                sn[0].send_keys("123456789")
                print("CHAMGING THE RACK HEIGHT")
                time.sleep(1)
                sn=driver.find_elements_by_name("rack_height")
                sn[0].clear()
                sn[0].send_keys("6")
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                print("CHANGING THE POWER PANEL AND CORE LOCATION")
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Power Panel & Core Location')]").click()
                print("CHAMGING THE POWER PANEL NAME")
                time.sleep(1)
                sn=driver.find_elements_by_name("panel_name")
                sn[0].clear()
                sn[0].send_keys("TEST PANEL")
                time.sleep(1)
                print("CHAMGING THE CORE U POSITION")
                sn=driver.find_elements_by_name("core_u_position")
                sn[0].clear()
                sn[0].send_keys("6")
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                print("VALIDATING THE DATA FROM THE PAGE")
                driver.refresh()
                time.sleep(3)
                vd=driver.find_elements_by_tag_name("td")
                for i in range(0,26,2):
                        time.sleep(1)
                        print(vd[i].text+"\t"+vd[i+1].text)
                        output.write(vd[i].text+"\t"+vd[i+1].text)
                #######################EVENT NOTIFICATION#############
                print("#######################EVENT NOTIFICATION#############")
                output.write("\n#######################EVENT NOTIFICATION#############")
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(1)
                part=driver.find_elements_by_tag_name("a")
                print("CHECKING THE EVENT NOTIFICATION PAGE")
                time.sleep(1)
                part[5].click()
                print("CHECKING EMAIL CHECK BOX")
                email=driver.find_element_by_name("allEmail")
                time.sleep(1)
                m=driver.find_elements_by_tag_name("label")
                if(email.is_selected()==True):
                        print("THE EMAIL CHECK BOX IS ALREADY ENABLED,SO DISABLING IT")
                                
                        m[0].click()
                        time.sleep(1)
                        m[0].click()       
                else:
                        print("THE EMAIL CHECK BOX IS ALREADY DISABLED,SO ENABLING IT")
                        #time.sleep(2)
                        m[0].click()        
                snmp=driver.find_element_by_name("allSnmp")
                if(snmp.is_selected()==True):
                        print("THE SNMP CHECK BOX IS ALREADY ENABLED,SO DISABLING IT")
                       # time.sleep(2)
                        m[1].click()
                        time.sleep(1)
                        m[1].click()       
                else:
                        print("THE SNMP CHECK BOX IS ALREADY DISABLED,SO ENABLING IT")
                        #time.sleep(2)
                        m[1].click()
                sys=driver.find_element_by_name("allSyslog")
                if(sys.is_selected()==True):
                        print("THE SYSLOG CHECK BOX IS ALREADY ENABLED,SO DISABLING IT")
                        #time.sleep(2)
                        m[2].click()
                        time.sleep(1)
                        m[2].click()
                        sys_count=1
                else:
                        print("THE SYSLOG CHECK BOX IS ALREADY DISABLED,SO ENABLING IT")
                        time.sleep(2)
                        m[2].click()        
                        sys_count=2
                time.sleep(1)
                print("REFRESING THE PAGE")        
                driver.refresh()
                time.sleep(4)
                print("VERIFYING THE SETTINGS AGAIN")
                time.sleep(1)
                snmp=driver.find_element_by_name("allSnmp")
                email=driver.find_element_by_name("allEmail")
                sys=driver.find_element_by_name("allSyslog")
                if(email.is_selected()==True):
                        print("SNMP_EMAIL IS ENABLE")
                        output.write("\nSNMP_EMAIL IS ENABLE")
                else:
                     print("SNMP_EMAIL IS DISABLED")
                     output.write("\nSNMP_EMAIL IS DISABLED")
                if(snmp.is_selected()==True):
                        print("SNMP_TRAP IS ENABLED")
                        output.write("\nSNMP_TRAP IS ENABLED")
                else:
                     print("SNMP_TRAP IS DISABLED")
                     output.write("\nSNMP_TRAP IS DISABLED")
                if(sys.is_selected()==True):
                        print("SYSLOG IS ENABLED")
                        output.write("\nSYSLOG IS ENABLED")
                else:
                     print("SYSLOG IS DISABLED")
                     output.write("\nSYSLOG IS DISABLED")

                ##########################PDU THRESHOLDS##############
                print("##########################PDU THRESHOLDS##############")
                output.write("\n##########################PDU THRESHOLDS##############")
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(1)
                part=driver.find_elements_by_tag_name("a")
                print("CHECKING THE PDU THRESOLD PAGE")
                time.sleep(1)
                part[7].click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Device Detection Threshold')]").click()
                time.sleep(1)
                th=driver.find_element_by_name("threshold")
                time.sleep(1)
                th.clear()
                th.send_keys("100")
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                print("CHECKING THE PDU 1 Threshold")
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Power Threshold')]").click()
                print("CHANGING THE HIGHER CRITICAL")
                hc=driver.find_element_by_name("upcritical")
                hc.clear()
                time.sleep(1)
                hc.send_keys("100")
                print("CHANGING THE HIGHER WARNING")
                hc=driver.find_element_by_name("upwarning")
                hc.clear()
                time.sleep(1)
                hc.send_keys("90")
                print("CHANGING THE LOW WARNING")
                hc=driver.find_element_by_name("lowwarning")
                hc.clear()
                time.sleep(1)
                hc.send_keys("50")
                print("CHANGING THE LOW CRITICAL")
                hc=driver.find_element_by_name("lowcritical")
                hc.clear()
                time.sleep(1)
                hc.send_keys("30")
                print("CHANGING THE RESET Threshold")
                hc=driver.find_element_by_name("threshold")
                hc.clear()
                time.sleep(1)
                hc.send_keys("20")
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                vd=driver.find_elements_by_tag_name("td")
                for i in range(0,10,2):
                        time.sleep(1)
                        print(vd[i].text+"\t"+vd[i+1].text)
                        output.write(vd[i].text+"\t"+vd[i+1].text)
                time.sleep(2)
                print("VERIFYING ENERGY TAB")
                lb=driver.find_elements_by_tag_name("label")
                lb[1].click()
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Energy Threshold')]").click()
                hc=driver.find_element_by_name("euc")
                hc.clear()
                time.sleep(1)
                hc.send_keys("214")
                hc=driver.find_element_by_name("euw")
                hc.clear()
                time.sleep(1)
                hc.send_keys("210")
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                vd=driver.find_elements_by_tag_name("td")
                for i in range(2,6,2):
                        time.sleep(1)
                        print(vd[i].text+"\t"+vd[i+1].text)
                        output.write(vd[i].text+"\t"+vd[i+1].text)
                time.sleep(1)
                print("CHECKING THE PHASE TAB")
                lb[2].click()
                time.sleep(2)
                vd=driver.find_elements_by_tag_name("th")
                print(vd[0].text+"  "+vd[1].text+"  "+vd[2].text+" "+vd[3].text+" "+vd[4].text+" "+vd[5].text)
                output.write(vd[0].text+"  "+vd[1].text+"  "+vd[2].text+" "+vd[3].text+" "+vd[4].text+" "+vd[5].text)
                time.sleep(1)
                vd=driver.find_elements_by_tag_name("td")
                for i in range(2,22,7):
                        time.sleep(1)
                        print(vd[i].text+"  "+vd[i+1].text+"  "+vd[i+2].text+"  "+vd[i+3].text+"  "+vd[i+4].text+"  "+vd[i+5].text)
                        output.write(vd[i].text+"  "+vd[i+1].text+"  "+vd[i+2].text+"  "+vd[i+3].text+"  "+vd[i+4].text+"  "+vd[i+5].text)
                time.sleep(2)
                vd=driver.find_elements_by_tag_name("th")
                print(vd[0].text+"  "+vd[1].text+"  "+vd[2].text+"  "+vd[3].text+" "+vd[4].text+" "+vd[5].text)
                output.write(vd[0].text+"  "+vd[1].text+"  "+vd[2].text+"  "+vd[3].text+" "+vd[4].text+" "+vd[5].text)
                time.sleep(2)
                vd=driver.find_elements_by_tag_name("td")
                for i in range(22,41,7):
                        time.sleep(1)
                        print(vd[i].text+"\t"+vd[i+1].text+"\t"+vd[i+2].text+"\t"+vd[i+3].text+"\t"+vd[i+4].text+"\t"+vd[i+5].text)
                        output.write(vd[i].text+"\t"+vd[i+1].text+"\t"+vd[i+2].text+"\t"+vd[i+3].text+"\t"+vd[i+4].text+"\t"+vd[i+5].text)
                for i in range(3,len(lb)):
                        print("VERIFYING THE :{} TAB".format(lb[i].text))
                        output.write("\nVERIFYING THE :{} TAB".format(lb[i].text))
                        time.sleep(2)
                        lb[i].click()

                ##################USER SETTINGS###########
                print("##################USER SETTINGS###########")
                output.write("\n##################USER SETTINGS###########")
                print("VERYFYING USER SETTINGS")
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'User Accounts')]").click()
                print("GETTING PRE-DEFINED USERS")
                time.sleep(1)
                for i in range(1):
                   a=driver.find_elements_by_tag_name("td")
                   print(a[i].text)
                print("ADDING NEW USER TO THE SERVER")
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Actions')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Add User')]").click()
                time.sleep(1)
                un=driver.find_element_by_name("username")
                un.clear()
                un.send_keys("TEST")
                time.sleep(1)
                un=driver.find_element_by_name("password")
                un.clear()
                un.send_keys("123456789")
                un=driver.find_element_by_name("cpassword")
                un.clear()
                un.send_keys("123456789")
                a=driver.find_elements_by_tag_name("label")
                a[4].click()
                driver.find_element_by_xpath(".//*[contains(text(),'Add User')]").click()
                time.sleep(3)
                if(str(driver.find_element_by_tag_name("p").text)=="User add failed, Please try again later!!"   ):
                        print("ERROR USER NOT CREATED..EXITING FROM THE SCRIPT\n PLEASE DELETE ANY OLD USER AND TRY AGAIN")
                        output.write("\nERROR USER NOT CREATED..EXITING FROM THE SCRIPT\n PLEASE DELETE ANY OLD USER AND TRY AGAIN")
                        output.close()
                        sys.exit()
                else:
                        driver.find_element_by_xpath(".//*[contains(text(),'OK')]").click()
                        print("\nLOGGING OUT WITH THE CURRENT USER TO VERIFY NEW USER")
                        time.sleep(5)
                        driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                        time.sleep(1)
                        driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                        time.sleep(3)
                        username=driver.find_element_by_name("username")
                        #WebDriverWait(driver, timeout).until(username)
                        time.sleep(1)
                        username.send_keys("TEST")
                        time.sleep(1)
                        password=driver.find_element_by_name("password")
                        #WebDriverWait(driver, timeout).until(password)
                        time.sleep(1)
                        password.send_keys("123456789")
                        time.sleep(1)
                        submit=driver.find_element_by_xpath('//button')
                        submit.click()
                        time.sleep(2)
                        a=driver.find_elements_by_tag_name("span")
                        if(str(a[1].text)=="Please change default Password for more Security Purpose"):
                                print("USER HAS SUCCSEFULLY CREATED AND NEED TO CHANGE THE DEFAULT PASSWORD")
                                output.write("\nUSER HAS SUCCSEFULLY CREATED AND NEED TO CHANGE THE DEFAULT PASSWORD")
                                time.sleep(3)
                                pas=driver.find_element_by_name("c_password")
                                pas.send_keys("123456789")
                                pas=driver.find_element_by_name("n_password")
                                pas.send_keys("1234567!")
                                pas=driver.find_element_by_name("cn_password")
                                pas.send_keys("1234567!")
                                time.sleep(2)
                                driver.find_element_by_xpath(".//*[contains(text(), 'Change Password')]").click()
                        else:
                                print("ERROR!!!!THE USER CREATION WAS NOT SUCCESFULL")
                                output.write("\nERROR!!!!THE USER CREATION WAS NOT SUCCESFULL")
                ################VERIFYING ROLE OF THE USER#######
                print("################VERIFYING ROLE OF THE USER#######")
                output.write("\n################VERIFYING ROLE OF THE USER#######")
                print("CHECKING THE PRIVILAGE OF THE USER")
                output.write("\nCHECKING THE PRIVILAGE OF THE USER")
                time.sleep(3)
                try:
                      a=driver.find_elements_by_tag_name("svg")
                      a[4].click()
                      print("THE USER HAS ADMINISTRATOR PRIVILAGE")
                      output.write("\nTHE USER HAS ADMINISTRATOR PRIVILAGE")
                except:
                      print("THE ROLE OF THE USER IS LIMITED TO **USER**")
                      output.write("\nTHE ROLE OF THE USER IS LIMITED TO **USER**")
                print("CHANGING THE ROLE OF THE USER")
                driver.find_element_by_xpath(".//*[contains(text(), 'TEST')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                time.sleep(3)
                username=driver.find_element_by_name("username")
                #WebDriverWait(driver, timeout).until(username)
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                #WebDriverWait(driver, timeout).until(password)
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'User Accounts')]").click()
                time.sleep(1)
                a=driver.find_elements_by_tag_name("svg")
                a[10].click()
                time.sleep(2)
                pas=driver.find_element_by_name("cpassword")
                pas.send_keys("1234567!")
                a=driver.find_elements_by_tag_name("label")
                a[3].click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(),'Save')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(),'OK')]").click()
                print("\nLOGGING OUT WITH THE CURRENT USER TO VERIFY NEW ROLE")
                time.sleep(5)
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                time.sleep(3)
                username=driver.find_element_by_name("username")
                #WebDriverWait(driver, timeout).until(username)
                time.sleep(1)
                username.send_keys("TEST")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                #WebDriverWait(driver, timeout).until(password)
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(2)
                print("CHECKING THE PRIVILAGE OF THE USER")
                time.sleep(1)
                try:
                       a=driver.find_elements_by_tag_name("svg")
                       a[4].click()
                       print("THE USER HAS ADMINISTRATOR PRIVILAGE.ROLE CHANGED SUCCESFULLY")
                       output.write("\nTHE USER HAS ADMINISTRATOR PRIVILAGE.ROLE CHANGED SUCCESFULLY")
                except:
                      print("THE ROLE OF THE USER IS LIMITED TO **USER**")
                      output.write("\nTHE ROLE OF THE USER IS LIMITED TO **USER**")
                     
                ############Verifying Session Management#############################
                print("############Verifying Session Management#############################")
                output.write("\n############Verifying Session Management#############################")
                driver.refresh()
                driver.find_element_by_xpath(".//*[contains(text(), 'TEST')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                time.sleep(3)
                username=driver.find_element_by_name("username")
                #WebDriverWait(driver, timeout).until(username)
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                #WebDriverWait(driver, timeout).until(password)
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(3)
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(".//*[contains(text(), 'User Accounts')]").click()      
                def password_checking(count):
                        global username,password
                        if(count==0):
                                username="admin"
                                password="12345"
                        elif(count==1):
                                username="admin"
                                password="1234567"
                        elif(count==2):
                                username="admin"
                                password="TEST"
                        elif(count==3):
                                username="admin"
                                password="12567!"
                        elif(count==4):
                                username="admin"
                                password="5687"
                             
                        return username,password

                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(),'Session Management')]").click()
                time.sleep(2)
                print("VERYFYING THE SETTINGS OF SIGN IN RETRIES")
                if(driver.find_element_by_name("chkuserblocking").is_selected()==True):
                        print("SIGN IN RETRIES ARE ENABLED")
                        time.sleep(1)
                        print("CHANGING THE NUMBER OF RETRIES")
                        time.sleep(1)        
                        driver.find_element_by_name("maxnumfailedlogins").send_keys("4")
                        print("CHANGING THE LOCKOUT TIME TO 1 MIN")
                        time.sleep(1)
                        driver.find_element_by_name("blocktimeout").send_keys("1 min")
                        time.sleep(1)
                        driver.find_element_by_xpath(".//*[contains(text(), 'Save')]").click()
                        time.sleep(1)
                        driver.find_element_by_xpath(".//*[contains(text(), 'OK')]").click()
                        time.sleep(1)
                        driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                        time.sleep(1)
                        driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                        print("VERYFYING WITH THE DIFFERENT USERNAME AND PASSWORD COMBINATION")
                        output.write("\nVERYFYING WITH THE DIFFERENT USERNAME AND PASSWORD COMBINATION")
                        for i in range(5):
                                time.sleep(3)
                                username1,password1=password_checking(i)                
                                print("USERNAME:{},PASSWORD:{}".format(username,password))
                                output.write("\nUSERNAME:{},PASSWORD:{}".format(username,password))
                                time.sleep(3)
                                username=driver.find_element_by_name("username")
                                username.clear()
                                #WebDriverWait(driver, timeout).until(username)
                                time.sleep(1)
                                username.send_keys(username1)
                                time.sleep(1)
                                password=driver.find_element_by_name("password")
                                password.clear()
                                #WebDriverWait(driver, timeout).until(password)
                                time.sleep(1)
                                password.send_keys(password1)
                                time.sleep(1)
                                submit=driver.find_element_by_xpath('//button')
                                submit.click()                
                                time.sleep(2)
                                try:
                                      a=driver.find_elements_by_tag_name("span")
                                      if(str(a[6].text)=="Invalid Username or Password"):
                                              print("SUCCESS!!PASSWORD IS NOT WORKING")
                                              output.write("\nSUCCESS!!PASSWORD IS NOT WORKING")
                                      elif(str(a[6].text)=="User is blocked, Please try after some time"):
                                              print("USER BLOCKING SUCCESFULLY DONE\n WAITING FOR 1 MIN\n..PLEASE WAIT")                              
                                              import sys
                                              import time
                                              for i in xrange(61,0,-1):
                                                       sys.stdout.write(str(i)+' ')
                                                       sys.stdout.flush()
                                                       time.sleep(1)
                                              username=driver.find_element_by_name("username")
                                              username.clear()
                                              #WebDriverWait(driver, timeout).until(username)
                                              time.sleep(1)
                                              username.send_keys("admin")
                                              time.sleep(1)
                                              password=driver.find_element_by_name("password")
                                              password.clear()
                                              #WebDriverWait(driver, timeout).until(password)
                                              time.sleep(1)
                                              password.send_keys("1234567!")
                                              time.sleep(1)
                                              submit=driver.find_element_by_xpath('//button')
                                              submit.click()
                                              print("OPERATION IS SUCCESFULLL")
                                              output.write("\nOPERATION IS SUCCESFULLL")
                                      else:
                                                print("ERROR!!!!SOMETHING IS WRONG...EXTING FROM THE SCRIPT.\n..PLEASE RUN AGIAN")
                                                output.write("\nERROR!!!!SOMETHING IS WRONG...EXTING FROM THE SCRIPT.\n..PLEASE RUN AGIAN")
                                                output.close()
                                                sys.exit()
                                              
                                except:
                                        print("SOMETHING WRONG...EXITING FROM THE SCRIPT")
                                        output.write("\nSOMETHING WRONG...EXITING FROM THE SCRIPT")
                                        output.close()
                                        sys.exit()
                        
                else:
                        print("SIGN IN RETRIES ARE DISABLED SO ENABLING IT")
                        time.sleep(1)        
                        driver.find_element_by_xpath(".//*[contains(text(), 'Sign-In retries allowed')]").click()
                        time.sleep(1)        
                        driver.find_element_by_xpath(".//*[contains(text(), 'Save')]").click()
                        time.sleep(2)        
                        driver.find_element_by_xpath(".//*[contains(text(), 'OK')]").click()
                        print("\nLOGGING OUT AND RUN AGAIN")
                        driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                        time.sleep(2)
                        driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                        
                ############################PASWWORD POLICY VERIFICATION########################
                print("\n############################PASWWORD POLICY VERIFICATION########################")
                output.write("\n############################PASWWORD POLICY VERIFICATION########################")
                time.sleep(3)
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'User Accounts')]").click()
                time.sleep(5)
                pas=driver.find_element_by_xpath(".//*[contains(text(), 'Password Policy')]").click()
                time.sleep(2)
                a=driver.find_element_by_name("minpwdlen")
                a.clear()
                time.sleep(2)
                print("CHANGING THE MINIMUM PASSWORD LENGTH TO 10")
                output.write("CHANGING THE MINIMUM PASSWORD LENGTH TO 10")
                time.sleep(2)
                a.send_keys("10")
                time.sleep(2)
                a=driver.find_element_by_name("maxpwdlen")
                a.clear()
                time.sleep(1)
                a.send_keys("25")
                time.sleep(2)
                print("ENABLING ATLEAST ONE LOWER CASE CHARACTER")
                output.write("ENABLING ATLEAST ONE LOWER CASE CHARACTER")
                a=driver.find_elements_by_tag_name("label")
                time.sleep(1)
                a[4].click()
                print("ENABLING ATLEAST ONE UPPER CASE CHARACTER")
                output.write("ENABLING ATLEAST ONE UPPER CASE CHARACTER")
                time.sleep(1)
                a[6].click()
                print("ENABLING ATLEAST ONE SPECIAL CHARACTER")
                output.write("ENABLING ATLEAST ONE SPECIAL CHARACTER")
                time.sleep(1)
                a[10].click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'OK')]").click()
                time.sleep(1)
                print("VERIFYING THE SETTINGS AGAIN")
                driver.refresh()
                time.sleep(5)
                a=driver.find_elements_by_tag_name("svg")
                time.sleep(2)
                if(str(a[28].get_attribute("aria-label"))=="checkmark"):
                        print("**ENFORCE AT LEAST ONE SPECIAL CHARACTER**IS ENABLED")
                        output.write("**ENFORCE AT LEAST ONE SPECIAL CHARACTER**IS ENABLED")
                else:
                        print("ERROR!!!**ENFORCE AT LEAST ONE SPECIAL CHARACTER**IS NOT ENABLED")
                        output.write("ERROR!!!**ENFORCE AT LEAST ONE SPECIAL CHARACTER**IS NOT ENABLED")
                time.sleep(1)        
                if(str(a[27].get_attribute("aria-label"))=="checkmark"):
                        print("**ENFORCE AT LEAST ONE NUMERIC CHARACTER**IS ENABLED")
                        output.write("**ENFORCE AT LEAST ONE NUMERIC CHARACTER**IS ENABLED")
                else:
                        print("ERROR!!!**ENFORCE AT LEAST ONE NUMERIC CHARACTER**IS NOT ENABLED")
                        output.write("ERROR!!!**ENFORCE AT LEAST ONE NUMERIC CHARACTER**IS NOT ENABLED")
                time.sleep(2)         
                if(str(a[26].get_attribute("aria-label"))=="checkmark"):
                        print("**ENFORCE AT LEAST ONE UPPER CASE CHARACTER**IS ENABLED")
                        output.write("**ENFORCE AT LEAST ONE UPPER CASE CHARACTER**IS ENABLED")
                else:
                        print("ERROR!!!**ENFORCE AT LEAST ONE UPPER CASE CHARACTER**IS NOT ENABLED")
                        print(str(a[24].get_attribute("aria-label")))
                        output.write("ERROR!!!**ENFORCE AT LEAST ONE UPPER CASE CHARACTER**IS NOT ENABLED")
                time.sleep(1)         
                if(str(a[25].get_attribute("aria-label"))=="checkmark"):
                        print("**ENFORCE AT LEAST ONE LOWER CASE CHARACTER**IS ENABLED")
                        output.write("**ENFORCE AT LEAST ONE LOWER CASE CHARACTER**IS ENABLED")
                else:
                        print("ERROR!!!**ENFORCE AT LEAST ONE LOWER CASE CHARACTER**IS NOT ENABLED")
                        output.write("ERROR!!!**ENFORCE AT LEAST ONE LOWER CASE CHARACTER**IS NOT ENABLED")
                time.sleep(2)
                user=""
                password=""
                cpassword=""
                def policy_check(count):
                        global user
                        global password,cpassword
                        if(count==0):
                                user="test"
                                password="123456789"
                                cpassword="123456789"
                        elif(count==1):
                                user="test"
                                password="12345678910"
                                cpassword="12345678910"
                        elif(count==2):
                                user="test"
                                password="123456789a"
                                cpassword="123456789a"
                        elif(count==3):
                                user="test"
                                password="123456789A"
                                cpassword="123456789A"
                        elif(count==4):
                                user="test"
                                password="1234!56789"
                                cpassword="1234!56789"
                        elif(count==5):
                                user="test"
                                password="123456789!!"
                                cpassword="123456789!!"
                        elif(count==6):
                                user="test"
                                password="abcdefghijklmnop"
                                cpassword="abcdefghijklmnop"
                        elif(count==7):
                                user="test"
                                password="ABCDEFGHIJKLMNOP"
                                cpassword="ABCDEFGHIJKLMNOP"
                        elif(count==8):
                                user="test"
                                password="abcdEFGHIJklMNOP33"
                                cpassword="abcdEFGHIJklMNOP33"
                        elif(count==9):
                                user="amit"
                                password="abcdEFGHIJkl@@MNOP33"
                                cpassword="abcdEFGHIJkl@@MNOP33"
                       
                        return user,password,cpassword
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Actions')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Add User')]").click()
                num=len(driver.find_elements_by_tag_name("span"))
                for i in range(10):
                        user1,password,cpassword1=policy_check(i)
                        time.sleep(2)
                        un=driver.find_element_by_name("username")
                        un.clear()
                        un.send_keys(user1)
                        time.sleep(1)
                        un=driver.find_element_by_name("password")
                        un.clear()
                        un.send_keys(password)
                        un=driver.find_element_by_name("cpassword")
                        un.clear()
                        un.send_keys(cpassword1)
                        a=driver.find_elements_by_tag_name("label")
                        a[4].click()
                        driver.find_element_by_xpath(".//*[contains(text(),'Add User')]").click()
                        time.sleep(3)
                        num=len(driver.find_elements_by_tag_name("span"))
                        if(num>85):
                                print("PASSWORD POLICY VERIFIED FOR THE PASSWORD COMBINATION:{}".format(password))
                                output.write("PASSWORD POLICY VERIFIED FOR THE PASSWORD COMBINATION:{}".format(password))
                        elif(num==71):
                                time.sleep(2)
                                print("USER HAS SUCCESFULLY ADDED..WITH REQUIRED COMBINATION")
                                output.write("USER HAS SUCCESFULLY ADDED..WITH REQUIRED COMBINATION")
                                driver.find_element_by_xpath(".//*[contains(text(),'OK')]").click()
                        else:
                               print("SOMETHING WENT WORNG....EXITING FROM THE SCRIPT")
                               output.write("SOMETHING WENT WORNG....EXITING FROM THE SCRIPT")
                               output.close()
                               sys.exit()
                ###########################UPLOAD FIRMWARE####################################
                print("###########################UPLOAD FIRMWARE####################################")
                output.write("\n###########################UPLOAD FIRMWARE####################################")
                print("PLEASE KEEP THE PANDUIT FIRMWARE IN THE SAME DIRECTORY")
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                part=driver.find_elements_by_tag_name("a")
                part[2].click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Action')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Upload Firmware')]").click()
                time.sleep(2)
                fw=driver.find_element_by_name("file")
                time.sleep(2)
                fw.send_keys(os.getcwd()+"/Panduit.FW")
                time.sleep(1)
                up=driver.find_elements_by_tag_name("button")
                time.sleep(1)
                up[1].click()
                print("PLEASE WAIT WHILE THE FIRMWARE FLASH AND REBOOT THE PDU.IT MAY TAKE 4-5 MINS.\n.PLEASE WAIT....")
                for i in xrange(300,0,-1):
                        sys.stdout.write(str(i)+' ')
                        sys.stdout.flush()
                        #print("\n"*50)        
                        time.sleep(1)
                        
                driver.get(ip)
                time.sleep(1)
                print("##############LOGIN THROUGH WEBDRIVER##########")
                username=driver.find_element_by_name("username")
                #WebDriverWait(driver, timeout).until(username)
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                #WebDriverWait(driver, timeout).until(password)
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                print("GETTING ALL THE INFORMATION AGAIN FROM THE IDENTIFICATION TAB")
                output.write("\nGETTING ALL THE INFORMATION AGAIN FROM THE IDENTIFICATION TAB")
                time.sleep(2)
                home=driver.find_elements_by_tag_name("svg")
                home[0].click()
                dash=driver.find_elements_by_css_selector("a.grommetux-anchor")
                time.sleep(1)
                dash[1].click()
                time.sleep(3)
                iden_info=driver.find_elements_by_tag_name("tr")
                for i in range(0,len(iden_info)):
                    time.sleep(1)
                    print(iden_info[i].text+"\n")
                    output.write(iden_info[i].text+"\n")
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()

                ############################LOGOUT FROM THE GUI#############
                driver.refresh()
                output.write("LOGS ENDS HERE")
                output.close()
                print("############################LOGOUT FROM THE GUI#############")
                time.sleep(2)
                username=driver.find_element_by_name("username")
                #WebDriverWait(driver, timeout).until(username)
                time.sleep(1)
                username.send_keys("admin")
                time.sleep(1)
                password=driver.find_element_by_name("password")
                #WebDriverWait(driver, timeout).until(password)
                time.sleep(1)
                password.send_keys("1234567!")
                time.sleep(1)
                submit=driver.find_element_by_xpath('//button')
                submit.click()
                time.sleep(4)
                driver.find_element_by_xpath(".//*[contains(text(), 'admin')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(".//*[contains(text(), 'Log Out')]").click()
                time.sleep(2)
                driver.close()
        except Exception as e:
                print("THE SCRIPT UNABLE TO CONTINUE FOR SOME ERROR.\n**SCRIPT_ERROR FILE HAS BEEN GENERATED")
                output.write("THE SCRIPT HAS FAILEd.....****INCOMPLETE RESULT***")                       
                error=open("SCRIPT_ERROR.txt",'a')
                error.write(now.strftime("\nDATE AND TIME:"+" "+"%H:%M:%S---%d/%b/%Y"))
                error.write("\nTHE SCRIPTS FAILED TO EXCUTE FOR THE FOLLOWING ERROR")
                print(e)
                error.write("\n"+str(e))
                error.close()
                output.close() 
                sys.exit()
                driver.close()

