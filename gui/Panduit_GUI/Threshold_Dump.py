import Login
def Threshold_dump(ip):
                Login.login(ip)
                print("##########################PDU THRESHOLDS##############")
                output.write("\n##########################PDU THRESHOLDS##############")
                se=driver.find_elements_by_tag_name("svg")
                se[4].click()
                time.sleep(1)
                part=driver.find_elements_by_tag_name("a")
                print("CHECKING THE PDU THRESOLD PAGE")
                time.sleep(1)
                part[7].click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Device Detection Threshold')]").click()
                time.sleep(1)
                th=driver.find_element_by_name("threshold")
                time.sleep(1)
                th.clear()
                th.send_keys("100")
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(1)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                print("CHECKING THE PDU 1 Threshold")
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Power Threshold')]").click()
                print("CHANGING THE HIGHER CRITICAL")
                hc=driver.find_element_by_name("upcritical")
                hc.clear()
                time.sleep(1)
                hc.send_keys("100")
                print("CHANGING THE HIGHER WARNING")
                hc=driver.find_element_by_name("upwarning")
                hc.clear()
                time.sleep(1)
                hc.send_keys("90")
                print("CHANGING THE LOW WARNING")
                hc=driver.find_element_by_name("lowwarning")
                hc.clear()
                time.sleep(1)
                hc.send_keys("50")
                print("CHANGING THE LOW CRITICAL")
                hc=driver.find_element_by_name("lowcritical")
                hc.clear()
                time.sleep(1)
                hc.send_keys("30")
                print("CHANGING THE RESET Threshold")
                hc=driver.find_element_by_name("threshold")
                hc.clear()
                time.sleep(1)
                hc.send_keys("20")
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                vd=driver.find_elements_by_tag_name("td")
                for i in range(0,10,2):
                        time.sleep(1)
                        print(vd[i].text+"\t"+vd[i+1].text)
                        output.write(vd[i].text+"\t"+vd[i+1].text)
                time.sleep(2)
                print("VERIFYING ENERGY TAB")
                lb=driver.find_elements_by_tag_name("label")
                lb[1].click()
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Energy Threshold')]").click()
                hc=driver.find_element_by_name("euc")
                hc.clear()
                time.sleep(1)
                hc.send_keys("214")
                hc=driver.find_element_by_name("euw")
                hc.clear()
                time.sleep(1)
                hc.send_keys("210")
                driver.find_element_by_xpath(    ".//*[contains(text(), 'Save')]").click()
                time.sleep(2)
                driver.find_element_by_xpath(    ".//*[contains(text(), 'OK')]").click()
                vd=driver.find_elements_by_tag_name("td")
                for i in range(2,6,2):
                        time.sleep(1)
                        print(vd[i].text+"\t"+vd[i+1].text)
                        output.write(vd[i].text+"\t"+vd[i+1].text)
                time.sleep(1)
                print("CHECKING THE PHASE TAB")
                lb[2].click()
                time.sleep(2)
                vd=driver.find_elements_by_tag_name("th")
                print(vd[0].text+"  "+vd[1].text+"  "+vd[2].text+" "+vd[3].text+" "+vd[4].text+" "+vd[5].text)
                output.write(vd[0].text+"  "+vd[1].text+"  "+vd[2].text+" "+vd[3].text+" "+vd[4].text+" "+vd[5].text)
                time.sleep(1)
                vd=driver.find_elements_by_tag_name("td")
                for i in range(2,22,7):
                        time.sleep(1)
                        print(vd[i].text+"  "+vd[i+1].text+"  "+vd[i+2].text+"  "+vd[i+3].text+"  "+vd[i+4].text+"  "+vd[i+5].text)
                        output.write(vd[i].text+"  "+vd[i+1].text+"  "+vd[i+2].text+"  "+vd[i+3].text+"  "+vd[i+4].text+"  "+vd[i+5].text)
                time.sleep(2)
                vd=driver.find_elements_by_tag_name("th")
                print(vd[0].text+"  "+vd[1].text+"  "+vd[2].text+"  "+vd[3].text+" "+vd[4].text+" "+vd[5].text)
                output.write(vd[0].text+"  "+vd[1].text+"  "+vd[2].text+"  "+vd[3].text+" "+vd[4].text+" "+vd[5].text)
                time.sleep(2)
                vd=driver.find_elements_by_tag_name("td")
                for i in range(22,41,7):
                        time.sleep(1)
                        print(vd[i].text+"\t"+vd[i+1].text+"\t"+vd[i+2].text+"\t"+vd[i+3].text+"\t"+vd[i+4].text+"\t"+vd[i+5].text)
                        output.write(vd[i].text+"\t"+vd[i+1].text+"\t"+vd[i+2].text+"\t"+vd[i+3].text+"\t"+vd[i+4].text+"\t"+vd[i+5].text)
                for i in range(3,len(lb)):
                        print("VERIFYING THE :{} TAB".format(lb[i].text))
                        output.write("\nVERIFYING THE :{} TAB".format(lb[i].text))
                        time.sleep(2)
                        lb[i].click()
                output.close()
                return
